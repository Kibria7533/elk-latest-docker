input {
  file {
    path => "/var/log/miner1/log/0chain.log"
    type => "0chain_miner01"
    start_position => "beginning"
  }
  file {
    path => "/var/log/miner1/log/n2n.log"
    type => "n2n_miner01"
    start_position => "beginning"
  }
  file {
    path => "/var/log/sharder1/log/0chain.log"
    type => "0chain_sharder01"
    start_position => "beginning"
  }
  file {
    path => "/var/log/sharder1/log/n2n.log"
    type => "n2n_sharder01"
    start_position => "beginning"
  }
  file {
    path => "/var/log/blobber1/log/0chainBlobber.log"
    type => "0chain_blobber01"
    start_position => "beginning"
  }
  file {
    path => "/var/log/blobber2/log/0chainBlobber.log"
    type => "0chain_blobber02"
    start_position => "beginning"
  }
  file {
    path => "/var/log/blobber1/log/validator.log"
    type => "0chain_validator01"
    start_position => "beginning"
  }
  file {
    path => "/var/log/blobber2/log/validator.log"
    type => "0chain_validator02"
    start_position => "beginning"
  }
  file {
    path => "/var/log/authorizer1/log/authorizer.log"
    type => "authorizer01"
    start_position => "beginning"
  }
  file {
    path => "/var/log/nginx/access.log"
    type => "nginx-access-log"
    start_position => "beginning"
  }
  file {
    path => "/var/log/nginx/error.log"
    type => "nginx-error-log"
    start_position => "beginning"
  }
  file {
    path => "/host/containers/*/*log"
    type => "dockerlogs"
    start_position => "beginning"
    codec => "json"
  }
}

filter {
  if [type] == "nginx-access-log" {
    grok {
      match => { "message" => '%{IPORHOST:host} - %{DATA:user} \[%{HTTPDATE:timestamp}\] "%{WORD:method} %{DATA:request_url} %{DATA:request_http_protocol}" %{NUMBER:status} %{NUMBER:bytes_out} "%{DATA:http_referer}" "%{DATA:user_agent}"' }
    }
  }
  if [type] == "dockerlogs" {
    json {
      source => "message"
      target => "doc"
    }
    mutate {
      add_field => {
        "image_name" => "%{[doc][attrs][image]}"
        "container_name" => "%{[doc][attrs][name]}"
        "image_id" => "%{[doc][attrs][imageID]}"
        "container_id" => "%{[doc][attrs][containerID]}"
      }
    }
    date {
      match => ["[doc][time]", "ISO8601"]
    }
  }
}

output {
  if [type] == "0chain_miner01" {
    elasticsearch {
      index => "dev1_0chain_miner01"
      hosts => ["https://65.109.101.153:9201"]
      user => "elastic"
      password => "elasticq1w2e3r4t5"
      ssl_enabled => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  } else if [type] == "n2n_miner01" {
    elasticsearch {
      index => "dev1_n2n_miner01"
      hosts => ["https://65.109.101.153:9201"]
      user => "elastic"
      password => "elasticq1w2e3r4t5"
      ssl_enabled => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  } else if [type] == "0chain_sharder01" {
    elasticsearch {
      index => "dev1_0chain_sharder01"
      hosts => ["https://65.109.101.153:9201"]
      user => "elastic"
      password => "elasticq1w2e3r4t5"
      ssl_enabled => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  } else if [type] == "n2n_sharder01" {
    elasticsearch {
      index => "dev1_n2n_sharder01"
      hosts => ["https://65.109.101.153:9201"]
      user => "elastic"
      password => "elasticq1w2e3r4t5"
      ssl_enabled => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  } else if [type] == "0chain_blobber01" {
    elasticsearch {
      index => "dev1_0chain_blobber01"
      hosts => ["https://65.109.101.153:9201"]
      user => "elastic"
      password => "elasticq1w2e3r4t5"
      ssl_enabled => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  } else if [type] == "0chain_blobber02" {
    elasticsearch {
      index => "dev1_0chain_blobber02"
      hosts => ["https://65.109.101.153:9201"]
      user => "elastic"
      password => "elasticq1w2e3r4t5"
      ssl_enabled => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  } else if [type] == "0chain_validator01" {
    elasticsearch {
      index => "dev1_0chain_validator01"
      hosts => ["https://65.109.101.153:9201"]
      user => "elastic"
      password => "elasticq1w2e3r4t5"
      ssl_enabled => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  } else if [type] == "0chain_validator02" {
    elasticsearch {
      index => "dev1_0chain_validator02"
      hosts => ["https://65.109.101.153:9201"]
      user => "elastic"
      password => "elasticq1w2e3r4t5"
      ssl_enabled => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  } else if [type] == "authorizer01" {
    elasticsearch {
      index => "dev1_authorizer01"
      hosts => ["https://65.109.101.153:9201"]
      user => "elastic"
      password => "elasticq1w2e3r4t5"
      ssl_enabled => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  } else if [type] == "nginx-access-log" {
    elasticsearch {
      index => "dev1_nginx-access-log"
      hosts => ["https://65.109.101.153:9201"]
      user => "elastic"
      password => "elasticq1w2e3r4t5"
      ssl_enabled => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  } else if [type] == "nginx-error-log" {
    elasticsearch {
      index => "dev1_nginx-error-log"
      hosts => ["https://65.109.101.153:9201"]
      user => "elastic"
      password => "elasticq1w2e3r4t5"
      ssl_enabled => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  } else if [type] == "dockerlogs" {
    elasticsearch {
      index => "dev1_dockerlogs"
      hosts => ["https://65.109.101.153:9201"]
      user => "elastic"
      password => "elasticq1w2e3r4t5"
      ssl_enabled => true
      cacert => "/usr/share/logstash/certs/ca/ca.crt"
    }
  }
  # stdout { codec => rubydebug } # Uncomment for debugging
}
